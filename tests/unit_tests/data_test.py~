"""Data to be used when testing Dyad

When checking for value errors each list contains arguments that should cause such an error. If a value error is raised then the test is passed.

Each element in a list is itself a list that contains two elements:
1. the arguments for a function being tested, and
2. the desired return value of that function for these arguments.

For example to test the function `dyad.func(*args)` we use the data::

func = [
    [args, val],
    [args, val],
    ...
    [args, val],
]

If the function `dyad.func(*args)` returns the value `val` then the test is passed.

"""

import numpy as np

check_eccentricity = [-1, 1., 2.] # Invalid eccentricity

true_anomaly_from_mean_anomaly = [
    # [[        mu,   e],      theta]
    [[-0.5*np.pi, 0.],  1.5*np.pi],
    [[ 0.       , 0.],  0.       ],
    [[ 0.5*np.pi, 0.],  0.5*np.pi],
    [[     np.pi, 0.],      np.pi],
    [[ 1.5*np.pi, 0.],  1.5*np.pi],
    [[ 2.0*np.pi, 0.],  0.       ],
    [[ 2.5*np.pi, 0.],  0.5*np.pi],
    #
    [[-0.5*np.pi, 0.5],  3.8366244292109135],
    [[ 0.       , 0.5],  0.                ],
    [[ 0.5*np.pi, 0.5],  2.446560877968672 ],
    [[     np.pi, 0.5],      np.pi         ],
    [[ 1.5*np.pi, 0.5],  3.8366244292109135],
    [[ 2.0*np.pi, 0.5],  0.                ],
    [[ 2.5*np.pi, 0.5],  2.446560877968672 ],
]

true_anomaly_from_eccentric_anomaly = [
    # [[        mu,   e],      theta]
    [[-0.5*np.pi, 0.],  1.5*np.pi],
    [[ 0.       , 0.],  0.       ],
    [[ 0.5*np.pi, 0.],  0.5*np.pi],
    [[     np.pi, 0.],      np.pi],
    [[ 1.5*np.pi, 0.],  1.5*np.pi],
    [[ 2.0*np.pi, 0.],  0.       ],
    [[ 2.5*np.pi, 0.],  0.5*np.pi],
    #
    [[-0.5*np.pi, 0.5],  4.1887902047863905],
    [[ 0.       , 0.5],  0.                ],
    [[ 0.5*np.pi, 0.5],  2.0943951023931966],
    [[     np.pi, 0.5],      np.pi         ],
    [[ 1.5*np.pi, 0.5],  4.1887902047863905],
    [[ 2.0*np.pi, 0.5],  0.                ],
    [[ 2.5*np.pi, 0.5],  2.094395102393195 ],
]

mean_anomaly_from_eccentric_anomaly = [
    # [[        mu,   e],      theta]
    [[-0.5*np.pi, 0.],  1.5*np.pi],
    [[ 0.       , 0.],  0.       ],
    [[ 0.5*np.pi, 0.],  0.5*np.pi],
    [[     np.pi, 0.],      np.pi],
    [[ 1.5*np.pi, 0.],  1.5*np.pi],
    [[ 2.0*np.pi, 0.],  0.       ],
    [[ 2.5*np.pi, 0.],  0.5*np.pi],
    #
    [[-0.5*np.pi, 0.5],  5.21238898038469  ],
    [[ 0.       , 0.5],  0.                ],
    [[ 0.5*np.pi, 0.5],  1.0707963267948966],
    [[     np.pi, 0.5],     np.pi          ],
    [[ 1.5*np.pi, 0.5],  5.21238898038469  ],
    [[ 2.0*np.pi, 0.5],  0.                ],
    [[ 2.5*np.pi, 0.5],  1.0707963267948966],
]

mean_anomaly_from_true_anomaly = [
    # [[        mu,   e],      theta]
    [[-0.5*np.pi, 0.],  1.5*np.pi],
    [[ 0.       , 0.],  0.       ],
    [[ 0.5*np.pi, 0.],  0.5*np.pi],
    [[     np.pi, 0.],      np.pi],
    [[ 1.5*np.pi, 0.],  1.5*np.pi],
    [[ 2.0*np.pi, 0.],  0.       ],
    [[ 2.5*np.pi, 0.],  0.5*np.pi],
    #
    [[-0.5*np.pi, 0.5],  5.669000457875207 ],
    [[ 0.       , 0.5],  0.                ],
    [[ 0.5*np.pi, 0.5],  0.6141848493043787],
    [[     np.pi, 0.5],      np.pi         ],
    [[ 1.5*np.pi, 0.5],  5.669000457875207 ],
    [[ 2.0*np.pi, 0.5],  0.                ],
    [[ 2.5*np.pi, 0.5],  0.6141848493043778],
]

eccentric_anomaly_from_true_anomaly = [
    # [[        mu,   e],      theta]
    [[-0.5*np.pi, 0.],  1.5*np.pi],
    [[ 0.       , 0.],  0.       ],
    [[ 0.5*np.pi, 0.],  0.5*np.pi],
    [[     np.pi, 0.],      np.pi],
    [[ 1.5*np.pi, 0.],  1.5*np.pi],
    [[ 2.0*np.pi, 0.],  0.       ],
    [[ 2.5*np.pi, 0.],  0.5*np.pi],
    #
    [[-0.5*np.pi, 0.5], 5.235987755982988 ],
    [[ 0.       , 0.5], 0.                ],
    [[ 0.5*np.pi, 0.5], 1.0471975511965983],
    [[     np.pi, 0.5], np.pi             ],
    [[ 1.5*np.pi, 0.5], 5.235987755982988 ],
    [[ 2.0*np.pi, 0.5], 0.                ],
    [[ 2.5*np.pi, 0.5], 1.0471975511965974],
]

eccentric_anomaly_from_mean_anomaly = [
    # [[        mu,   e],      theta]
    [[-0.5*np.pi, 0.],  1.5*np.pi],    
    [[ 0.       , 0.],  0.       ],
    [[ 0.5*np.pi, 0.],  0.5*np.pi],
    [[     np.pi, 0.],      np.pi],
    [[ 1.5*np.pi, 0.],  1.5*np.pi],
    [[ 2.0*np.pi, 0.],  0.       ],
    [[ 2.5*np.pi, 0.],  0.5*np.pi],
    #
    [[-0.5*np.pi, 0.5],  4.262205369089816],
    [[ 0.       , 0.5],  0.               ],
    [[ 0.5*np.pi, 0.5],  2.02097993808977 ],
    [[     np.pi, 0.5],      np.pi        ],
    [[ 1.5*np.pi, 0.5],  4.262205369089816],
    [[ 2.0*np.pi, 0.5],  0.               ],
    [[ 2.5*np.pi, 0.5],  2.02097993808977 ],
]

# delaunay_variables = [
#     # [
#     #     [a, e, theta, Omega, i, omega],
#     #     [J_1, J_2, J_3, Theta_1, Theta_2, Theta_3],
#     # ]
#     [
#         [0.548, 0.715, 0.602, 0.544, 0.423, 0.645, 0.437],
#         [0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   ],
#     ],
#     # Test for single zeros
#     [
#         [0.   , 0.715, 0.602, 0.544, 0.423, 0.645, 0.437],
#         [0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   ],
#     ],
#     [
#         [0.548, 0.   , 0.602, 0.544, 0.423, 0.645, 0.437],
#         [0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   ],
#     ],
#     [
#         [0.548, 0.715, 0.   , 0.544, 0.423, 0.645, 0.437],
#         [0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   ],
#     ],
#     [
#         [0.548, 0.715, 0.602, 0.   , 0.423, 0.645, 0.437],
#         [0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   ],
#     ],
#     [
#         [0.548, 0.715, 0.602, 0.544, 0.   , 0.645, 0.437],
#         [0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   ],
#     ],
#     [
#         [0.548, 0.715, 0.602, 0.544, 0.423, 0.   , 0.437],
#         [0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   ],
#     ],
#     [
#         [0.548, 0.715, 0.602, 0.544, 0.423, 0.645, 0.   ],
#         [0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   ],
#     ],
#     # Test for two zeros
#     [
#         [0.   , 0.   , 0.602, 0.544, 0.423, 0.645, 0.437],
#         [0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   ],
#     ],
#     # Test for three zeros
#     [
#         [0.   , 0.   , 0.   , 0.544, 0.423, 0.645, 0.437],
#         [0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   ],
#     ],
#     # Test for four zeros
#     [
#         [0.   , 0.   , 0.   , 0.   , 0.423, 0.645, 0.437],
#         [0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   ],
#     ],
#     # Test for five zeros
#     [
#         [0.   , 0.   , 0.   , 0.   , 0.   , 0.645, 0.437],
#         [0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   ],
#     ],
#     # Test for six zeros
#     [
#         [0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.437],
#         [0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   ],
#     ],
#     # Test for all zeros
#     [
#         [0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   ],
#         [0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   ],
#     ],
# ]
